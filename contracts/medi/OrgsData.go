// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package medi

import (
	"go-ethereum/accounts/abi"
	"go-ethereum/accounts/abi/bind"
	"go-ethereum/common"
	"go-ethereum/core/types"
	"strings"
)

// OrgsDataABI is the input ABI used to generate the binding from.
const OrgsDataABI = "[{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getAddressFromPublicKeyV1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes32[2]\"}],\"name\":\"getAddressFromPublicKeyV2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]=======EasyCns.sol:EasyCns=======[{\"constant\":true,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"}],\"name\":\"get\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"set\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"Proxy\",\"outputs\":[],\"payable\":false,\"type\":\"function\"}]=======OrgsData.sol:OrgsData=======[{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"},{\"name\":\"name\",\"type\":\"bytes32[4]\"}],\"name\":\"setNameHashAndName\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"getNameHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"},{\"name\":\"orgAddress\",\"type\":\"address\"},{\"name\":\"publicKey\",\"type\":\"bytes32[2]\"},{\"name\":\"name\",\"type\":\"bytes32[4]\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"addOrg\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"},{\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"setActive\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"getPublicKey\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[2]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSuperSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getAddressFromPublicKeyV1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"},{\"name\":\"orgAddress\",\"type\":\"address\"},{\"name\":\"publicKey\",\"type\":\"bytes32[2]\"}],\"name\":\"setOrgAddressAndPublicKey\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"},{\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"setTime\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes32[2]\"}],\"name\":\"getAddressFromPublicKeyV2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"delSuper\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getUuidListSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getUuidByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes16\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"delOrg\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"isUuidExist\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"getOrgAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"nameHash\",\"type\":\"bytes32\"}],\"name\":\"getUuidByNameHash\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes16\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"getName\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes32[4]\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSuperByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"orgAddress\",\"type\":\"address\"}],\"name\":\"getUuidByOrgAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"bytes16\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isSuper\",\"outputs\":[{\"name\":\"valid\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addSuper\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"getTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"inputs\":[{\"name\":\"easyCnsAddress\",\"type\":\"address\"}],\"payable\":false,\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uuid\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"orgAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"publicKey\",\"type\":\"bytes32[2]\"},{\"indexed\":false,\"name\":\"nameHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes32[4]\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"onAddOrgCore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uuid\",\"type\":\"bytes16\"}],\"name\":\"onDelOrg\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uuid\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"active\",\"type\":\"bool\"}],\"name\":\"onSetActive\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uuid\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"orgAddress\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"publicKey\",\"type\":\"bytes32[2]\"}],\"name\":\"onSetOrgAddressAndPublicKey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uuid\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"nameHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"name\":\"name\",\"type\":\"bytes32[4]\"}],\"name\":\"onSetNameHashAndNameCore\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"uuid\",\"type\":\"bytes16\"},{\"indexed\":false,\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"onSetTime\",\"type\":\"event\"}]=======Super.sol:Super=======[{\"constant\":true,\"inputs\":[],\"name\":\"getSuperSize\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getAddressFromPublicKeyV1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes32[2]\"}],\"name\":\"getAddressFromPublicKeyV2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"delSuper\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getSuperByIndex\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"isSuper\",\"outputs\":[{\"name\":\"valid\",\"type\":\"bool\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"addSuper\",\"outputs\":[],\"payable\":false,\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"type\":\"constructor\"}]=======Validate.sol:Validate=======[{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getAddressFromPublicKeyV1\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_publicKey\",\"type\":\"bytes32[2]\"}],\"name\":\"getAddressFromPublicKeyV2\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"type\":\"function\"}]"

// OrgsDataBin is the compiled bytecode used for deploying new contracts.
const OrgsDataBin = `6060604052341561000c57fe5b5b6102588061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633627bcfa146100465780635185a34d146100e0575bfe5b341561004e57fe5b61009e600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610163565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100e857fe5b610121600480806040019060028060200260405190810160405280929190826002602002808284378201915050505050919050506101d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000816040518082805190602001908083835b602083106101995780518252602082019150602081019050602083039250610176565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490505b919050565b600081604051808260026020028083836000831461020f575b80518252602083111561020f576020820191506020810190506020830392506101eb565b50505090500191505060405180910390206001900490505b9190505600a165627a7a7230582011ca21b88af078979fd73519f08115968dbafa009c78374f3aee2fdb25739ed50029

======= EasyCns.sol:EasyCns =======
6060604052341561000c57fe5b5b6103858061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063693ec85e14610051578063a815ff15146100eb578063fd782de514610164575bfe5b341561005957fe5b6100a9600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610176565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100f357fe5b610162600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061020a565b005b341561016c57fe5b610174610315565b005b60006001826040518082805190602001908083835b602083106101ae578051825260208201915060208101905060208303925061018b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156102675760006000fd5b806001836040518082805190602001908083835b6020831061029e578051825260208201915060208101905060208303925061027b565b6001836020036101000a038019825116818451168082178552505050505050905001915050908152602001604051809103902060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b5050565b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5600a165627a7a723058202c08dfd0d73eea7d81f5060d70091c13452d294067bd41824f7eb61aff662e250029

======= OrgsData.sol:OrgsData =======
6060604052341561000c57fe5b6040516020806127a9833981016040528080519060200190919050505b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b80600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505b6126ea806100bf6000396000f30060606040523615610131576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806305b7462b1461013357806312d9fdaf146101925780631aaa503a146101e157806324716b55146102945780632e26787e146102d2578063343496211461034f5780633627bcfa146103755780633931cc9f1461040f5780633f7a52b61461048d5780635185a34d146104c957806365f337f51461054c5780636b303682146105825780637c333c0a146105a85780637f67b908146106025780638eeded90146106355780639d8e910814610680578063a177cbb4146106f3578063a5d95ad914610751578063ab013c26146107ce578063c16433281461082e578063c3c8df991461089e578063e1e8637b146108ec578063fe07283a14610922575bfe5b341561013b57fe5b61019060048080356fffffffffffffffffffffffffffffffff19169060200190919080608001906004806020026040519081016040528092919082600460200280828437820191505050505091905050610969565b005b341561019a57fe5b6101c360048080356fffffffffffffffffffffffffffffffff19169060200190919050506109ca565b60405180826000191660001916815260200191505060405180910390f35b34156101e957fe5b61029260048080356fffffffffffffffffffffffffffffffff191690602001909190803573ffffffffffffffffffffffffffffffffffffffff1690602001909190806040019060028060200260405190810160405280929190826002602002808284378201915050505050919080608001906004806020026040519081016040528092919082600460200280828437820191505050505091908035906020019091905050610a11565b005b341561029c57fe5b6102d060048080356fffffffffffffffffffffffffffffffff19169060200190919080351515906020019091905050610a78565b005b34156102da57fe5b61030360048080356fffffffffffffffffffffffffffffffff1916906020019091905050610ba8565b604051808260026020028083836000831461033d575b80518252602083111561033d57602082019150602081019050602083039250610319565b50505090500191505060405180910390f35b341561035757fe5b61035f610c34565b6040518082815260200191505060405180910390f35b341561037d57fe5b6103cd600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610c42565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561041757fe5b61048b60048080356fffffffffffffffffffffffffffffffff191690602001909190803573ffffffffffffffffffffffffffffffffffffffff169060200190919080604001906002806020026040519081016040528092919082600260200280828437820191505050505091905050610cb1565b005b341561049557fe5b6104c760048080356fffffffffffffffffffffffffffffffff19169060200190919080359060200190919050506110be565b005b34156104d157fe5b61050a60048080604001906002806020026040519081016040528092919082600260200280828437820191505050505091905050611244565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561055457fe5b610580600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061129e565b005b341561058a57fe5b6105926113ff565b6040518082815260200191505060405180910390f35b34156105b057fe5b6105c6600480803590602001909190505061140d565b60405180826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b341561060a57fe5b61063360048080356fffffffffffffffffffffffffffffffff191690602001909190505061145a565b005b341561063d57fe5b61066660048080356fffffffffffffffffffffffffffffffff1916906020019091905050611707565b604051808215151515815260200191505060405180910390f35b341561068857fe5b6106b160048080356fffffffffffffffffffffffffffffffff1916906020019091905050611798565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156106fb57fe5b6107156004808035600019169060200190919050506117ff565b60405180826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b341561075957fe5b61078260048080356fffffffffffffffffffffffffffffffff1916906020019091905050611842565b60405180826004602002808383600083146107bc575b8051825260208311156107bc57602082019150602081019050602083039250610798565b50505090500191505060405180910390f35b34156107d657fe5b6107ec60048080359060200190919050506118ce565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561083657fe5b610862600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611938565b60405180826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200191505060405180910390f35b34156108a657fe5b6108d2600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061199f565b604051808215151515815260200191505060405180910390f35b34156108f457fe5b610920600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050611a49565b005b341561092a57fe5b61095360048080356fffffffffffffffffffffffffffffffff1916906020019091905050611b39565b6040518082815260200191505060405180910390f35b60008160405180826004602002808383600083146109a6575b8051825260208311156109a657602082019150602081019050602083039250610982565b505050905001915050604051809103902090506109c4838284611b80565b5b505050565b600060036000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206003015490505b919050565b6000826040518082600460200280838360008314610a4e575b805182526020831115610a4e57602082019150602081019050602083039250610a2a565b50505090500191505060405180910390209050610a6f868686848787611edf565b5b505050505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610ad95750610ad83361199f565b5b1515610ae55760006000fd5b8060036000846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507f713e572bb47b301d3993c6d748aa8f43912b3e2864d1fd701e16e586fbb53905828260405180836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001821515151581526020019250505060405180910390a15b5b5050565b610bb061249e565b60036000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600101600280602002604051908101604052809291908260028015610c27576020028201915b81546000191681526020019060010190808311610c0f575b505050505090505b919050565b600060018054905090505b90565b6000816040518082805190602001908083835b60208310610c785780518252602082019150602081019050602083039250610c55565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490505b919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610d125750610d113361199f565b5b1515610d1e5760006000fd5b8260036000826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff161515610d755760006000fd5b82600070010000000000000000000000000000000002600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a9004700100000000000000000000000000000000026fffffffffffffffffffffffffffffffff1916141515610e085760006000fd5b826000600102816000600281101515610e1d57fe5b60200201516000191614158015610e4f57506000600102816001600281101515610e4357fe5b60200201516000191614155b1515610e5b5760006000fd5b84848173ffffffffffffffffffffffffffffffffffffffff16610e7d82611244565b73ffffffffffffffffffffffffffffffffffffffff16141515610ea05760006000fd5b86600360008a6fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600360008a6fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600101906002610f669291906124ca565b5087600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff0219169083700100000000000000000000000000000000900402179055507fd83647f29e9b03c927a4fa98e046f8931a1fa2f097acca63953dab74e81f8a5588888860405180846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018260026020028083836000831461109b575b80518252602083111561109b57602082019150602081019050602083039250611077565b505050905001935050505060405180910390a15b5b50505b505b505b505b505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061111f575061111e3361199f565b5b151561112b5760006000fd5b8160036000826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff1615156111825760006000fd5b81600081141515156111945760006000fd5b8260036000866fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600801819055507f50843b091ea0bec4b6ead7f725b4fcb769671b6948c77b9cd98b25ff2440d84c848460405180836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020018281526020019250505060405180910390a15b5b505b505b5050565b6000816040518082600260200280838360008314611281575b8051825260208311156112815760208201915060208101905060208303925061125d565b50505090500191505060405180910390206001900490505b919050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156112fd5760006000fd5b8160008173ffffffffffffffffffffffffffffffffffffffff16141515156113255760006000fd5b600091505b6001805490508210156113b95760018281548110151561134657fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156113ab576113b9565b5b818060010192505061132a565b6001828154811015156113c857fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b5b505b5050565b600060068054905090505b90565b600060068281548110151561141e57fe5b90600052602060002090600291828204019190066010025b9054906101000a90047001000000000000000000000000000000000290505b919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806114bb57506114ba3361199f565b5b15156114c75760006000fd5b8060036000826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff16151561151e5760006000fd5b6004600060036000856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600301546000191660001916815260200190815260200160002060006101000a8154906fffffffffffffffffffffffffffffffff02191690556005600060036000856fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154906fffffffffffffffffffffffffffffffff0219169055600060036000846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160006101000a81548160ff0219169083151502179055507fd534b834b48c1cc340c4ea4cd46a15979d94896dfa8b58062437b765afb2ee4f8260405180826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200191505060405180910390a15b5b505b50565b6000600060036000846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561178e5760019050611793565b600090505b919050565b600060036000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690505b919050565b600060046000836000191660001916815260200190815260200160002060009054906101000a90047001000000000000000000000000000000000290505b919050565b61184a612510565b60036000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206004016004806020026040519081016040528092919082600480156118c1576020028201915b815460001916815260200190600101908083116118a9575b505050505090505b919050565b600081600081101580156118e6575060018054905081105b15156118f25760006000fd5b60018381548110151561190157fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b5b50919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a90047001000000000000000000000000000000000290505b919050565b6000600060009150600090505b600180549050811015611a3f576001818154811015156119c857fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415611a315760019150611a3f565b5b80806001019150506119ac565b8191505b50919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611aa65760006000fd5b8060008173ffffffffffffffffffffffffffffffffffffffff1614151515611ace5760006000fd5b60018054806001018281611ae2919061253c565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b505b50565b600060036000836fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020019081526020016000206008015490505b919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611be15750611be03361199f565b5b1515611bed5760006000fd5b8260036000826fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060000160009054906101000a900460ff161515611c445760006000fd5b826000600102816000191614151515611c5d5760006000fd5b8360007001000000000000000000000000000000000260046000836000191660001916815260200190815260200160002060009054906101000a9004700100000000000000000000000000000000026fffffffffffffffffffffffffffffffff1916141515611ccc5760006000fd5b6004600060036000896fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600301546000191660001916815260200190815260200160002060006101000a8154906fffffffffffffffffffffffffffffffff02191690558460036000886fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060030181600019169055508360036000886fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001908152602001600020600401906004611dd2929190612568565b508560046000876000191660001916815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff0219169083700100000000000000000000000000000000900402179055507f1635214039bdd9691387a349f55c8385956cefd297de23c1439eb776cd32a50386868660405180846fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff19168152602001836000191660001916815260200182600460200280838360008314611ebf575b805182526020831115611ebf57602082019150602081019050602083039250611e9b565b505050905001935050505060405180910390a15b5b505b505b505b505050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480611f405750611f3f3361199f565b5b1515611f4c5760006000fd5b84600070010000000000000000000000000000000002600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a9004700100000000000000000000000000000000026fffffffffffffffffffffffffffffffff1916141515611fdf5760006000fd5b846000600102816000600281101515611ff457fe5b602002015160001916141580156120265750600060010281600160028110151561201a57fe5b60200201516000191614155b15156120325760006000fd5b82600081141515156120445760006000fd5b87878173ffffffffffffffffffffffffffffffffffffffff1661206682611244565b73ffffffffffffffffffffffffffffffffffffffff161415156120895760006000fd5b8760007001000000000000000000000000000000000260046000836000191660001916815260200190815260200160002060009054906101000a9004700100000000000000000000000000000000026fffffffffffffffffffffffffffffffff19161415156120f85760006000fd5b60c0604051908101604052806001151581526020018c73ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a60001916815260200189815260200188815250600360008e6fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff1916815260200190815260200160002060008201518160000160006101000a81548160ff02191690831515021790555060208201518160000160016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001019060026121fa9291906125ae565b50606082015181600301906000191690556080820151816004019060046122229291906125f4565b5060a082015181600801559050508b600460008b6000191660001916815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff0219169083700100000000000000000000000000000000900402179055508b600560008d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a8154816fffffffffffffffffffffffffffffffff02191690837001000000000000000000000000000000009004021790555060068054806001018281612310919061263a565b91600052602060002090600291828204019190066010025b8e909190916101000a8154816fffffffffffffffffffffffffffffffff021916908370010000000000000000000000000000000090040217905550507f1f717927730b50b9670932d56f2654b1cc0ce85102ddeaa503ff6b59cd7b34e38c8c8c8c8c8c60405180876fffffffffffffffffffffffffffffffff19166fffffffffffffffffffffffffffffffff191681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200185600260200280838360008314612423575b805182526020831115612423576020820191506020810190506020830392506123ff565b50505090500184600019166000191681526020018360046020028083836000831461246d575b80518252602083111561246d57602082019150602081019050602083039250612449565b505050905001828152602001965050505050505060405180910390a15b5b505b50505b505b505b505b505050505050565b6040604051908101604052806002905b6000600019168152602001906001900390816124ae5790505090565b82600281019282156124ff579160200282015b828111156124fe5782518290600019169055916020019190600101906124dd565b5b50905061250c9190612674565b5090565b6080604051908101604052806004905b6000600019168152602001906001900390816125205790505090565b815481835581811511612563578183600052602060002091820191016125629190612699565b5b505050565b826004810192821561259d579160200282015b8281111561259c57825182906000191690559160200191906001019061257b565b5b5090506125aa9190612674565b5090565b82600281019282156125e3579160200282015b828111156125e25782518290600019169055916020019190600101906125c1565b5b5090506125f09190612674565b5090565b8260048101928215612629579160200282015b82811115612628578251829060001916905591602001919060010190612607565b5b5090506126369190612674565b5090565b81548183558181151161266f57600101600290048160010160029004836000526020600020918201910161266e9190612699565b5b505050565b61269691905b8082111561269257600081600090555060010161267a565b5090565b90565b6126bb91905b808211156126b757600081600090555060010161269f565b5090565b905600a165627a7a7230582009934af77c998f5c5fe4e997c0fc80ff328ee087fa9f1fdc3c154271c7b09efc0029

======= Super.sol:Super =======
6060604052341561000c57fe5b5b33600060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b5b6107998061005f6000396000f30060606040523615610081576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806334349621146100835780633627bcfa146100a95780635185a34d1461014357806365f337f5146101c6578063ab013c26146101fc578063c3c8df991461025c578063e1e8637b146102aa575bfe5b341561008b57fe5b6100936102e0565b6040518082815260200191505060405180910390f35b34156100b157fe5b610101600480803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506102ee565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561014b57fe5b6101846004808060400190600280602002604051908101604052809291908260026020028082843782019150505050509190505061035d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101ce57fe5b6101fa600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506103b7565b005b341561020457fe5b61021a6004808035906020019091905050610518565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561026457fe5b610290600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610582565b604051808215151515815260200191505060405180910390f35b34156102b257fe5b6102de600480803573ffffffffffffffffffffffffffffffffffffffff1690602001909190505061062c565b005b600060018054905090505b90565b6000816040518082805190602001908083835b602083106103245780518252602082019150602081019050602083039250610301565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490505b919050565b600081604051808260026020028083836000831461039a575b80518252602083111561039a57602082019150602081019050602083039250610376565b50505090500191505060405180910390206001900490505b919050565b6000600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156104165760006000fd5b8160008173ffffffffffffffffffffffffffffffffffffffff161415151561043e5760006000fd5b600091505b6001805490508210156104d25760018281548110151561045f57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156104c4576104d2565b5b8180600101925050610443565b6001828154811015156104e157fe5b906000526020600020900160005b6101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690555b5b505b5050565b60008160008110158015610530575060018054905081105b151561053c5760006000fd5b60018381548110151561054b57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1691505b5b50919050565b6000600060009150600090505b600180549050811015610622576001818154811015156105ab57fe5b906000526020600020900160005b9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156106145760019150610622565b5b808060010191505061058f565b8191505b50919050565b600060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156106895760006000fd5b8060008173ffffffffffffffffffffffffffffffffffffffff16141515156106b15760006000fd5b600180548060010182816106c5919061071c565b916000526020600020900160005b84909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505b5b505b50565b815481835581811511610743578183600052602060002091820191016107429190610748565b5b505050565b61076a91905b8082111561076657600081600090555060010161074e565b5090565b905600a165627a7a72305820a0139d40846263e86a98ba9b56b9b0d9dc85b18a16ab493b415a215ef6407f360029

======= Validate.sol:Validate =======
6060604052341561000c57fe5b5b6102588061001c6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633627bcfa146100465780635185a34d146100e0575bfe5b341561004e57fe5b61009e600480803590602001908201803590602001908080601f01602080910402602001604051908101604052809392919081815260200183838082843782019150505050505091905050610163565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156100e857fe5b610121600480806040019060028060200260405190810160405280929190826002602002808284378201915050505050919050506101d2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000816040518082805190602001908083835b602083106101995780518252602082019150602081019050602083039250610176565b6001836020036101000a03801982511681845116808217855250505050505090500191505060405180910390206001900490505b919050565b600081604051808260026020028083836000831461020f575b80518252602083111561020f576020820191506020810190506020830392506101eb565b50505090500191505060405180910390206001900490505b9190505600a165627a7a72305820d8fe805631ed8688cf2f19bfd889cb888710f249242e5b271a66d7c3a7ba6d8a0029`

// DeployOrgsData deploys a new Ethereum contract, binding an instance of OrgsData to it.
func DeployOrgsData(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *OrgsData, error) {
	parsed, err := abi.JSON(strings.NewReader(OrgsDataABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(OrgsDataBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OrgsData{OrgsDataCaller: OrgsDataCaller{contract: contract}, OrgsDataTransactor: OrgsDataTransactor{contract: contract}, OrgsDataFilterer: OrgsDataFilterer{contract: contract}}, nil
}

// OrgsData is an auto generated Go binding around an Ethereum contract.
type OrgsData struct {
	OrgsDataCaller     // Read-only binding to the contract
	OrgsDataTransactor // Write-only binding to the contract
	OrgsDataFilterer   // Log filterer for contract events
}

// OrgsDataCaller is an auto generated read-only Go binding around an Ethereum contract.
type OrgsDataCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OrgsDataTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OrgsDataTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OrgsDataFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OrgsDataFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OrgsDataSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OrgsDataSession struct {
	Contract     *OrgsData         // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OrgsDataCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OrgsDataCallerSession struct {
	Contract *OrgsDataCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts   // Call options to use throughout this session
}

// OrgsDataTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OrgsDataTransactorSession struct {
	Contract     *OrgsDataTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// OrgsDataRaw is an auto generated low-level Go binding around an Ethereum contract.
type OrgsDataRaw struct {
	Contract *OrgsData // Generic contract binding to access the raw methods on
}

// OrgsDataCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OrgsDataCallerRaw struct {
	Contract *OrgsDataCaller // Generic read-only contract binding to access the raw methods on
}

// OrgsDataTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OrgsDataTransactorRaw struct {
	Contract *OrgsDataTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOrgsData creates a new instance of OrgsData, bound to a specific deployed contract.
func NewOrgsData(address common.Address, backend bind.ContractBackend) (*OrgsData, error) {
	contract, err := bindOrgsData(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OrgsData{OrgsDataCaller: OrgsDataCaller{contract: contract}, OrgsDataTransactor: OrgsDataTransactor{contract: contract}, OrgsDataFilterer: OrgsDataFilterer{contract: contract}}, nil
}

// NewOrgsDataCaller creates a new read-only instance of OrgsData, bound to a specific deployed contract.
func NewOrgsDataCaller(address common.Address, caller bind.ContractCaller) (*OrgsDataCaller, error) {
	contract, err := bindOrgsData(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OrgsDataCaller{contract: contract}, nil
}

// NewOrgsDataTransactor creates a new write-only instance of OrgsData, bound to a specific deployed contract.
func NewOrgsDataTransactor(address common.Address, transactor bind.ContractTransactor) (*OrgsDataTransactor, error) {
	contract, err := bindOrgsData(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OrgsDataTransactor{contract: contract}, nil
}

// NewOrgsDataFilterer creates a new log filterer instance of OrgsData, bound to a specific deployed contract.
func NewOrgsDataFilterer(address common.Address, filterer bind.ContractFilterer) (*OrgsDataFilterer, error) {
	contract, err := bindOrgsData(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OrgsDataFilterer{contract: contract}, nil
}

// bindOrgsData binds a generic wrapper to an already deployed contract.
func bindOrgsData(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(OrgsDataABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OrgsData *OrgsDataRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _OrgsData.Contract.OrgsDataCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OrgsData *OrgsDataRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OrgsData.Contract.OrgsDataTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OrgsData *OrgsDataRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OrgsData.Contract.OrgsDataTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OrgsData *OrgsDataCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _OrgsData.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OrgsData *OrgsDataTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OrgsData.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OrgsData *OrgsDataTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OrgsData.Contract.contract.Transact(opts, method, params...)
}

// GetAddressFromPublicKeyV1 is a free data retrieval call binding the contract method 0x3627bcfa.
//
// Solidity: function getAddressFromPublicKeyV1(_publicKey bytes) constant returns(address)
func (_OrgsData *OrgsDataCaller) GetAddressFromPublicKeyV1(opts *bind.CallOpts, _publicKey []byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _OrgsData.contract.Call(opts, out, "getAddressFromPublicKeyV1", _publicKey)
	return *ret0, err
}

// GetAddressFromPublicKeyV1 is a free data retrieval call binding the contract method 0x3627bcfa.
//
// Solidity: function getAddressFromPublicKeyV1(_publicKey bytes) constant returns(address)
func (_OrgsData *OrgsDataSession) GetAddressFromPublicKeyV1(_publicKey []byte) (common.Address, error) {
	return _OrgsData.Contract.GetAddressFromPublicKeyV1(&_OrgsData.CallOpts, _publicKey)
}

// GetAddressFromPublicKeyV1 is a free data retrieval call binding the contract method 0x3627bcfa.
//
// Solidity: function getAddressFromPublicKeyV1(_publicKey bytes) constant returns(address)
func (_OrgsData *OrgsDataCallerSession) GetAddressFromPublicKeyV1(_publicKey []byte) (common.Address, error) {
	return _OrgsData.Contract.GetAddressFromPublicKeyV1(&_OrgsData.CallOpts, _publicKey)
}

// GetAddressFromPublicKeyV2 is a free data retrieval call binding the contract method 0x5185a34d.
//
// Solidity: function getAddressFromPublicKeyV2(_publicKey bytes32[2]) constant returns(address)
func (_OrgsData *OrgsDataCaller) GetAddressFromPublicKeyV2(opts *bind.CallOpts, _publicKey [2][32]byte) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _OrgsData.contract.Call(opts, out, "getAddressFromPublicKeyV2", _publicKey)
	return *ret0, err
}

// GetAddressFromPublicKeyV2 is a free data retrieval call binding the contract method 0x5185a34d.
//
// Solidity: function getAddressFromPublicKeyV2(_publicKey bytes32[2]) constant returns(address)
func (_OrgsData *OrgsDataSession) GetAddressFromPublicKeyV2(_publicKey [2][32]byte) (common.Address, error) {
	return _OrgsData.Contract.GetAddressFromPublicKeyV2(&_OrgsData.CallOpts, _publicKey)
}

// GetAddressFromPublicKeyV2 is a free data retrieval call binding the contract method 0x5185a34d.
//
// Solidity: function getAddressFromPublicKeyV2(_publicKey bytes32[2]) constant returns(address)
func (_OrgsData *OrgsDataCallerSession) GetAddressFromPublicKeyV2(_publicKey [2][32]byte) (common.Address, error) {
	return _OrgsData.Contract.GetAddressFromPublicKeyV2(&_OrgsData.CallOpts, _publicKey)
}
